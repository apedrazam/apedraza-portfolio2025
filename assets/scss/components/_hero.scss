/**
 * Hero Section Styles
 * Styles for the homepage hero section
 */

@use '../abstracts/variables';
@use '../abstracts/mixins';
@use '../base/animations';
/* Hero section base */
.hero-section {
  color: variables.$color-text-body;
  position: relative; /* Ensure relative positioning */
  
  .hero-container {
    background-color: variables.$color-prominent-surface;
    position: relative;
    display: flex;
    gap: variables.$spacing-xs;
    overflow: hidden;
    justify-content: center;
    padding-top: clamp(19vw, 19vw, 19.5rem);
    padding-bottom: 8vw;
  }
  
  /* Background elements */
  .hero-bg {
    position: absolute;
    inset: 0;
    z-index: 1; /* Increase z-index to be above falling hexes */

    svg {
      width: 100%;
      height: 100%;
      
      g.hex {
        transition: fill variables.$transition-normal variables.$transition-ease;
        // Ensure hardware acceleration for hexagon animations
        transform: translateZ(0);
        will-change: transform;
        backface-visibility: hidden;
      }
    }
  }
  
  .hero-bg-top {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
    z-index: 2; /* Above other background elements */
    
    @media (min-width: 1536px) {
      transform: translateX(-50%) translateY(calc((100vw - 1536px) / -4));
    }
  }
  
  /* Falling hexagons background */
  .falling-hex-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 0; /* Below everything else */
    pointer-events: none;
    background-color: transparent; /* Ensure transparency */
    contain: strict; /* Improves performance by isolating this content */
  }
  
  .falling-hex {
    position: absolute;
    pointer-events: none; /* Ignore mouse events */
    /* Use transform for hardware acceleration */
    transform: translateZ(0);
    will-change: transform, opacity;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    
    &.hidden-hex {
      opacity: 0;
      visibility: hidden;
    }
    
    &.animated-hex {
      opacity: 1;
      visibility: visible;
      animation-name: fallDown;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }
    
    svg {
      width: 50px; /* Base size - scales will be applied to the container */
      height: 56px;
      filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1)); /* Reduced shadow for performance */
      
      path {
        stroke: variables.$color-blue-900;
        stroke-width: 3px;
        fill: transparent;
      }
      
      @media (max-width: 768px) {
        width: 40px;
        height: 45px;
      }
      
      @media (max-width: 480px) {
        width: 30px;
        height: 34px;
      }
    }
  }
  
  /* Hero content container */
  .hero-content {
    position: relative;
    z-index: 10; /* This is already high, which is good */
    align-self: stretch;
    width: 48vw;
    max-width: variables.$breakpoint-2xl;
    margin-top: auto;
    margin-bottom: auto;
    color: variables.$color-text-on-prominent;
    // Ensure content has visible overflow for animations
    overflow: visible;

    .hero-title {
      display: flex;
      gap: variables.$spacing-sm;
    }

    .hero-title > h1,
    .hero-paragraph,
    .hero-subtitle {
      font-family: variables.$font-family-body;
      font-size: clamp(1.125rem, 1.75vw, 1.75rem);
      font-weight: 400;
      letter-spacing: 0;
      line-height: 1.4;
      // Ensure visibility
      visibility: visible;
    }

    .hero-icon {
      cursor: help;
    }
    
    /* Apply slide-up animation classes */
    .hero-title {
      @extend .slide-up-animation;
      transform-style: preserve-3d;
    }
    
    .hero-paragraph {
      @extend .slide-up-animation;
      transform-style: preserve-3d;
    }
    
    .hero-subtitle {
      @extend .slide-up-animation;
      transform-style: preserve-3d;
    }
  }
  
  .hero-header {
    display: flex;
    width: 100%;
    flex-direction: column;
    font-weight: normal;
  }
  
  .hero-title {
    align-self: stretch;
  }
  
  .hero-paragraph,
  .hero-subtitle {
    align-self: stretch;
    margin-top: variables.$spacing-base;
  }
  
  /* CTA section */
  .hero-cta-container {
    display: flex;
    width: 100%;
    flex-direction: column;
    text-align: center;
    justify-content: center;
    margin-top: 5vh;
    margin-bottom: 3vh;
    @extend .slide-up-animation;
    transform-style: preserve-3d;
  }
  
  .hero-buttons {
    display: flex;
    gap: variables.$spacing-lg;

    @include mixins.mobile {
      flex-direction: column;
      gap: variables.$spacing-base;
      margin-top: variables.$spacing-base;
    }
  }
  
  /* Button styling */
  .hero-button {
    &-outline {
      @include mixins.button-outline;
    }
    
    &-fill {
      @include mixins.button-fill;

      &:hover {
        background-color: variables.$color-primary-surface-light;
      }
    }
    
    &-icon {
      margin-left: variables.$spacing-xs;
      font-weight: 900;
    }

    &:hover .hero-button-icon {
      animation: toBottomFromTop 0.2s forwards;
    }
  }
  
  /* Mobile styles */
  @include mixins.mobile {
    .hero-container {
      padding-top: 38vw;
      overflow: hidden;
      position: relative;
    }
    
    .hero-content {
      width:82vw;
    
      .hero-title > h1,
      .hero-subtitle,
      .hero-paragraph,
      .hero-icon {
        font-size: clamp(1.25rem, 5.5vw, 2rem);
        margin-bottom: 0;
  
        .secondary-description {
          display: none;
        }
      }
    }
    
    .hero-cta-container {
      max-width: 100%;
      margin-top: 3vh;;
    }
  }
} 

/* Remove old animation classes since we've replaced them with our new system */
.hero__title,
.hero__subtitle,
.hero__text,
.hero__cta {
  &.animate-slide-in-up {
    opacity: 1;
    transform: translateY(0);
    transition: opacity 0.5s ease, transform 0.5s ease;
  }
} 